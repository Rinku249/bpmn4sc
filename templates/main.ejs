<% if (recursion) { -%>
type <%=parent.id%>Key = (Party, Party)
<%} -%>
template <%= parent.id %> 
    with
        <%= parent.documentation %>
        creator : Party
    where
        signatory creator
        <% x = parent.documentation.split("\n\t\t");
            m = undefined;
        for (let i = x.length-1 ; i < x.length ; i--){
            if(x[i].includes("Party")){
                if(x[i].split(" : Party")[0] === parent.lane){
                    continue;
                }
                else{
                    m = x[i].split(" : Party")[0]
                    m = m.split(" : [Party]")[0]
                    break;
                }
            }
        }%>observer <%= m -%>

        <% if (recursion) { %>
        key (<%=parent.lane%>, <%= m %>) : <%=parent.id%>Key
        maintainer key._1
        <% } -%>
        <%if (recursion) { %>
        choice <%= parent.name.replaceAll(" ","") %> : ContractId Repetition
            with 
                desiredReturn : Text
            controller <%=m%>
            do
                create Repetition with
                    <%= m %> = <%= m %>
                    <%= parent.lane%> = <%= parent.lane%>
                    desiredReturn = desiredReturn
        <%} else { -%>

        choice <%= parent.name.replaceAll(" ","") %> : ()
            controller <%= parent.lane %>
            do
                return ()
        <% } -%>
<% if (recursion){ %>
type RepetitionKey = (Party, Party)
template Repetition
    with
        <%= m %> : Party
        <%= parent.lane%> : Party
        desiredReturn : Text
    where
        signatory <%= parent.lane%>
        observer <%= m %>
    
        key (<%=parent.lane%>, <%= m %>) : RepetitionKey
        maintainer key._1<%} %>